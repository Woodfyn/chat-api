services:
  app:
    container_name: app
    # restart: always
    image: chat-api-prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./.env:/root/.env

  app-debug:
    container_name: debug
    # restart: always
    image: chat-api-debug
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "2345:2345"
      - "8081:8081"
    volumes:
      - ./.env:/root/.env
    command: "--listen=:2345 --headless=true --log=true --log-output=debugger,debuglineerr,gdbwire,lldbout,rpc --accept-multiclient --api-version=2 exec ./app"

  redis:
    container_name: rdb
    # restart: always
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    container_name: psql
    # restart: always
    image: postgres:latest
    volumes:
    - ./.database/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_PASSWORD=qwerty
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  application:
    driver: bridge